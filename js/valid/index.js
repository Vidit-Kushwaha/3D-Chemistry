const atomSpec = {
    resn: { type: "string", valid: true, prop: true, gui: true },
    x: { type: "number", floatType: true, valid: false, step: 0.1, prop: true },
    y: { type: "number", floatType: true, valid: false, step: 0.1, prop: true },
    z: { type: "number", floatType: true, valid: false, step: 0.1, prop: true },
    color: { type: "color", gui: false },
    surfaceColor: { type: "color", gui: false },
    elem: { type: "element", gui: true, prop: true },
    hetflag: { type: "boolean", valid: false, gui: true },
    chain: { type: "string", gui: true, prop: true },
    resi: { type: "array_range", gui: true },
    icode: { type: "number", valid: false, step: 0.1 },
    rescode: { type: "number", valid: false, step: 0.1, prop: true },
    serial: { type: "number", valid: false, step: 0.1 },
    atom: { type: "string", valid: false, gui: true, prop: true },
    bonds: { type: "array", valid: false },
    ss: { type: "string", valid: false },
    singleBonds: { type: "boolean", valid: false },
    bondOrder: { type: "array", valid: false },
    properties: { type: "properties", valid: false },
    b: { type: "number", floatType: true, valid: false, step: 0.1, prop: true },
    pdbline: { type: "string", valid: false },
    clickable: { type: "boolean", valid: false, gui: false },
    contextMenuEnabled: { type: "boolean", valid: false, gui: false },
    callback: { type: "function", valid: false },
    invert: { type: "boolean", valid: false },
    reflectivity: { type: "number", floatType: true, gui: false, step: 0.1 },
    altLoc: { type: "invalid", valid: false },
    sym: { type: "number", gui: false },
  };
  
  const otherExtra = {
    model: { type: "string", valid: false },
    bonds: { type: "number", valid: false, gui: true },
    predicate: { type: "string", valid: false },
    invert: { type: "boolean", valid: false, gui: true },
    byres: { type: "boolean", valid: false, gui: true },
    expand: { type: "number", valid: false, gui: false },
    within: { type: "string", valid: false },
    and: { type: "string", valid: false },
    or: { type: "string", valid: false },
    not: { type: "string", valid: false },
  };
  